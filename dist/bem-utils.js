"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
function parseBem(str) {
    const [block, elem] = str.split('__').map(part => {
        const [owner, modName, modVal] = part.split('_');
        let res = {
            name: owner,
        };
        if (modName) {
            if (!modVal) {
                throw new Error('no mod value');
            }
            res = Object.assign({}, res, { modName, modVal });
        }
        return res;
    });
    block.elem = elem || null;
    if (block.modName && block.elem) {
        throw new Error('elems of modded blocks are not allowed');
    }
    return block;
}
exports.parseBem = parseBem;
function stringifyBem(bemObj) {
    let res = bemObj.name;
    if (bemObj.modName) {
        res = [bemObj.name, bemObj.modName, bemObj.modVal].join('_');
    }
    if (bemObj.elem) {
        res = [res, stringifyBem(bemObj.elem)].join('__');
    }
    return res;
}
exports.stringifyBem = stringifyBem;
function bemPath(bemObj) {
    let folderName = '';
    if (bemObj.elem) {
        folderName = '__' + bemObj.elem.name + '/';
        if (bemObj.elem.modName) {
            folderName += '_' + bemObj.elem.modName + '/';
        }
    }
    if (bemObj.modName) {
        folderName = '_' + bemObj.modName + '/';
    }
    return folderName + stringifyBem(bemObj) + '.css';
}
exports.bemPath = bemPath;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYmVtLXV0aWxzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vc3JjL2JlbS11dGlscy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLGtCQUF5QixHQUFHO0lBQzNCLE1BQU0sQ0FBQyxLQUFLLEVBQUUsSUFBSSxDQUFDLEdBQUcsR0FBRyxDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUMsQ0FBQyxHQUFHLENBQUMsSUFBSTtRQUM3QyxNQUFNLENBQUMsS0FBSyxFQUFFLE9BQU8sRUFBRSxNQUFNLENBQUMsR0FBRyxJQUFJLENBQUMsS0FBSyxDQUFDLEdBQUcsQ0FBQyxDQUFDO1FBQ2pELElBQUksR0FBRyxHQUFHO1lBQ1QsSUFBSSxFQUFFLEtBQUs7U0FDWCxDQUFDO1FBQ0YsRUFBRSxDQUFDLENBQUMsT0FBTyxDQUFDLENBQUEsQ0FBQztZQUNaLEVBQUUsQ0FBQyxDQUFDLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQztnQkFDYixNQUFNLElBQUksS0FBSyxDQUFDLGNBQWMsQ0FBQyxDQUFDO1lBQ2pDLENBQUM7WUFDRCxHQUFHLHFCQUNDLEdBQUcsSUFDTixPQUFPLEVBQUUsTUFBTSxHQUNmLENBQUM7UUFDSCxDQUFDO1FBQ0QsTUFBTSxDQUFDLEdBQUcsQ0FBQztJQUNaLENBQUMsQ0FBQyxDQUFDO0lBQ0gsS0FBSyxDQUFDLElBQUksR0FBRyxJQUFJLElBQUksSUFBSSxDQUFDO0lBQzFCLEVBQUUsQ0FBQyxDQUFDLEtBQUssQ0FBQyxPQUFPLElBQUksS0FBSyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUM7UUFDakMsTUFBTSxJQUFJLEtBQUssQ0FBQyx3Q0FBd0MsQ0FBQyxDQUFBO0lBQzFELENBQUM7SUFDRCxNQUFNLENBQUMsS0FBSyxDQUFDO0FBQ2QsQ0FBQztBQXRCRCw0QkFzQkM7QUFFRCxzQkFBNkIsTUFBTTtJQUNsQyxJQUFJLEdBQUcsR0FBRyxNQUFNLENBQUMsSUFBSSxDQUFDO0lBQ3RCLEVBQUUsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDO1FBQ3BCLEdBQUcsR0FBRyxDQUFDLE1BQU0sQ0FBQyxJQUFJLEVBQUUsTUFBTSxDQUFDLE9BQU8sRUFBRSxNQUFNLENBQUMsTUFBTSxDQUFDLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDO0lBQzlELENBQUM7SUFDRCxFQUFFLENBQUMsQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQztRQUNqQixHQUFHLEdBQUcsQ0FBQyxHQUFHLEVBQUUsWUFBWSxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztJQUNuRCxDQUFDO0lBQ0QsTUFBTSxDQUFDLEdBQUcsQ0FBQztBQUNaLENBQUM7QUFURCxvQ0FTQztBQUVELGlCQUF3QixNQUFNO0lBQzdCLElBQUksVUFBVSxHQUFHLEVBQUUsQ0FBQztJQUNwQixFQUFFLENBQUMsQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQztRQUNqQixVQUFVLEdBQUcsSUFBSSxHQUFHLE1BQU0sQ0FBQyxJQUFJLENBQUMsSUFBSSxHQUFHLEdBQUcsQ0FBQztRQUMzQyxFQUFFLENBQUMsQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUM7WUFDekIsVUFBVSxJQUFJLEdBQUcsR0FBRyxNQUFNLENBQUMsSUFBSSxDQUFDLE9BQU8sR0FBRyxHQUFHLENBQUE7UUFDOUMsQ0FBQztJQUNGLENBQUM7SUFDRCxFQUFFLENBQUMsQ0FBQyxNQUFNLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQztRQUNwQixVQUFVLEdBQUcsR0FBRyxHQUFHLE1BQU0sQ0FBQyxPQUFPLEdBQUcsR0FBRyxDQUFDO0lBQ3pDLENBQUM7SUFDRCxNQUFNLENBQUMsVUFBVSxHQUFHLFlBQVksQ0FBQyxNQUFNLENBQUMsR0FBRyxNQUFNLENBQUM7QUFDbkQsQ0FBQztBQVpELDBCQVlDIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGZ1bmN0aW9uIHBhcnNlQmVtKHN0cikge1xuXHRjb25zdCBbYmxvY2ssIGVsZW1dID0gc3RyLnNwbGl0KCdfXycpLm1hcChwYXJ0ID0+IHtcblx0XHRjb25zdCBbb3duZXIsIG1vZE5hbWUsIG1vZFZhbF0gPSBwYXJ0LnNwbGl0KCdfJyk7XG5cdFx0bGV0IHJlcyA9IHtcblx0XHRcdG5hbWU6IG93bmVyLFxuXHRcdH07XG5cdFx0aWYgKG1vZE5hbWUpe1xuXHRcdFx0aWYgKCFtb2RWYWwpIHtcblx0XHRcdFx0dGhyb3cgbmV3IEVycm9yKCdubyBtb2QgdmFsdWUnKTtcblx0XHRcdH1cblx0XHRcdHJlcyA9IHtcblx0XHRcdFx0Li4ucmVzLFxuXHRcdFx0XHRtb2ROYW1lLCBtb2RWYWxcblx0XHRcdH07XG5cdFx0fVxuXHRcdHJldHVybiByZXM7XG5cdH0pO1xuXHRibG9jay5lbGVtID0gZWxlbSB8fCBudWxsO1xuXHRpZiAoYmxvY2subW9kTmFtZSAmJiBibG9jay5lbGVtKSB7XG5cdFx0dGhyb3cgbmV3IEVycm9yKCdlbGVtcyBvZiBtb2RkZWQgYmxvY2tzIGFyZSBub3QgYWxsb3dlZCcpXG5cdH1cblx0cmV0dXJuIGJsb2NrO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gc3RyaW5naWZ5QmVtKGJlbU9iaikge1xuXHRsZXQgcmVzID0gYmVtT2JqLm5hbWU7XG5cdGlmIChiZW1PYmoubW9kTmFtZSkge1xuXHRcdHJlcyA9IFtiZW1PYmoubmFtZSwgYmVtT2JqLm1vZE5hbWUsIGJlbU9iai5tb2RWYWxdLmpvaW4oJ18nKTtcblx0fVxuXHRpZiAoYmVtT2JqLmVsZW0pIHtcblx0XHRyZXMgPSBbcmVzLCBzdHJpbmdpZnlCZW0oYmVtT2JqLmVsZW0pXS5qb2luKCdfXycpO1xuXHR9XG5cdHJldHVybiByZXM7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBiZW1QYXRoKGJlbU9iaikge1xuXHRsZXQgZm9sZGVyTmFtZSA9ICcnO1xuXHRpZiAoYmVtT2JqLmVsZW0pIHtcblx0XHRmb2xkZXJOYW1lID0gJ19fJyArIGJlbU9iai5lbGVtLm5hbWUgKyAnLyc7XG5cdFx0aWYgKGJlbU9iai5lbGVtLm1vZE5hbWUpIHtcblx0XHRcdGZvbGRlck5hbWUgKz0gJ18nICsgYmVtT2JqLmVsZW0ubW9kTmFtZSArICcvJ1xuXHRcdH1cblx0fVxuXHRpZiAoYmVtT2JqLm1vZE5hbWUpIHtcblx0XHRmb2xkZXJOYW1lID0gJ18nICsgYmVtT2JqLm1vZE5hbWUgKyAnLyc7IFx0XHRcblx0fVxuXHRyZXR1cm4gZm9sZGVyTmFtZSArIHN0cmluZ2lmeUJlbShiZW1PYmopICsgJy5jc3MnO1xufVxuIl19